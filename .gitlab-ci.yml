stages:
  - build
  - test
  - quality

variables:
  SONAR_ORG: "futind"
  SONAR_PROJECT_KEY: "futind_LoanIssuer"
  SONAR_HOST_URL: "https://sonarcloud.io"

cache:
  paths:
    - .m2/repository/

before_build:
  stage: build
  only:
    - main
    - develop
    - merge_requests
  script:
    - mvn install:install-file
      -Dfile=".\Libs\LoanIssuerLibrary-0.0.1-SNAPSHOT.jar"
      -DgroupId="ru.neoflex"
      -DartifactId="loan-issuer-library"
      -Dversion="0.0.1-SNAPSHOT"
      -Dpackaging=jar

build_services:
  stage: build
  needs:
    - before_build
  only:
    - main
    - develop
    - merge_requests
  script:
    - for service in MS-Calculator MS-Deal MS-Statement MS-Dossier MS-Gateway; do
        echo "Building $service...";
        mvn -DskipTests=true -f $service/pom.xml clean package;
      done
  artifacts:
    paths:
      - MS-*/target/*.jar

test_services:
  stage: test
  needs:
   - build_services
  only:
    - main
    - develop
    - merge_requests
  script:
    - for service in MS-Calculator MS-Deal MS-Statement MS-Dossier MS-Gateway; do
        echo "Testing $service...";
        mvn -DskipTests=false -f $service/pom.xml test jacoco:report > /dev/null 2>&1;
        echo $service;
        echo ${CODECOV_TOKEN};
        pwd;
        ls -al;
        bash <(curl -s https://codecov.io/bash) -t "${CODECOV_TOKEN}" -f "$service/target/site/jacoco/jacoco.xml" -F "$service";
      done
  artifacts:
    when: always
    paths:
      - MS-*/target/site/jacoco/
    reports:
      junit:
        - MS-*/target/surefire-reports/TEST-*.xml

sonar_analysis:
  needs:
    - test_services
  only:
    - main
    - develop
    - merge_requests
  stage: quality
  script:
    - echo "Running Sonar analysis for $service...";
    - for service in MS-Calculator MS-Deal MS-Statement MS-Dossier MS-Gateway; do
        echo "Running SonarQube analysis for $service...";
        mvn clean verify sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.organization=${SONAR_ORG} -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.token=${SONAR_TOKEN} -Dsonar.coverage.jacoco.xmlReportPaths="../$service/target/site/jacoco/jacoco.xml" -Dsonar.modules=$service;
      done;
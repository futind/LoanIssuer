stages:
  - build
  - test
  - quality

variables:
  SONAR_ORG: "futind"
  SONAR_PROJECT_KEY: "futind_LoanIssuer"

cache:
  paths:
    - .m2/repository/

before_build:
  stage: build
  only:
    - main
    - develop
    - merge_requests
  script:
    - mvn install:install-file
      -Dfile=".\Libs\LoanIssuerLibrary-0.0.1-SNAPSHOT.jar"
      -DgroupId="ru.neoflex"
      -DartifactId="loan-issuer-library"
      -Dversion="0.0.1-SNAPSHOT"
      -Dpackaging=jar

build_services:
  stage: build
  needs:
    - before_build
  only:
    - main
    - develop
    - merge_requests
  script:
    - |
      $services = @("MS-Calculator", "MS-Deal", "MS-Statement", "MS-Dossier", "MS-Gateway")
      foreach ($service in $services) {
        echo "Building $service..."
        mvn -DskipTests=true -f $service/pom.xml clean package
      }
  artifacts:
    paths:
      - MS-*/target/*.jar

test_services:
  stage: test
  needs:
    - build_services
  only:
    - main
    - develop
    - merge_requests
  script:
    - |
      $services = @("MS-Calculator", "MS-Deal", "MS-Statement", "MS-Dossier", "MS-Gateway")
      foreach ($service in $services) {
        echo "Testing $service..."
        mvn -DskipTests=false -f $service/pom.xml test jacoco:report
        Invoke-WebRequest -Uri https://codecov.io/bash -OutFile codecov.sh
        .\codecov.sh -t $env:CODECOV_TOKEN
      }
  artifacts:
    when: always
    paths:
      - MS-*/target/site/jacoco/
    reports:
      junit:
        - MS-*/target/surefire-reports/TEST-*.xml

sonar_analysis:
  needs:
    - test_services
  only:
    - main
    - develop
    - merge_requests
  stage: quality
  script:
    - mvn sonar:sonar
      -Dsonar.projectKey=$env:SONAR_PROJECT_KEY
      -Dsonar.organization=$env:SONAR_ORG
      -Dsonar.host.url=$env:SONAR_HOST_URL
      -Dsonar.token=$env:SONAR_TOKEN